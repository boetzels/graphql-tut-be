type Query {
    info: String!
    feed: [Link!]!
    link(id: ID!): Link
}


type Mutation {
    createLink (
        url: String!,
        description: String!
    ): Link!

    signUp(
        email:String!
        password:String!
        name:String!
    ): AuthPayload

    signIn(
        email:String!
        password:String!
    ): AuthPayload

    vote (
        linkId: ID!
    ): Vote
    
    updateLink(id: ID!, url: String, description: String): Link

    deleteLink(id: ID!): Link
}

"""
Subscriptions
"""
type Subscription {
    newLink: Link
}

"""
type definitions
"""
type Link {
    id: ID!
    description: String!
    url: String!
    user: User
    votes: [Vote!]!
}

type AuthPayload {
    token: String
    user: User
}

type User {
    id: ID!
    name: String!
    links: [Link!]!
}

type Vote {
    id: ID!
    link: Link!
    user: User!
}
